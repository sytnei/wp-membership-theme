/*---------------------------------------------------
  VARIOUS MIXINS
  ---------------------------------------------------
  A combo of elements.less and home-written mixins
  Documentation of each mixin inline.
  ---------------------------------------------------*/


/*------------------------- MIXINS: SPRITE FUNCTIONS ---------------*/

@mixin makeBlock() {
    display: block;
    content: '';
    position: absolute;
}

@mixin sprite($imgScale, $imgPosX, $imgPosY, $objW, $objH) {
    background: url($sprite) no-repeat ceil($imgPosX*$imgScale) ceil($imgPosY*$imgScale);
    background-size: floor($spriteW*$imgScale) ceil($spriteH*$imgScale);
    width: ceil($objW*$imgScale);
    height: ceil($objH*$imgScale);
    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        background: url($sprite2x) no-repeat ceil($imgPosX*$imgScale) ceil($imgPosY*$imgScale);
        background-size: floor($spriteW*$imgScale) ceil($spriteH*$imgScale);
    }
}


/*------------------------- LAYOUT ---------------*/

@mixin box-sizing($sizing: border-box) {
    box-sizing: $sizing;
}

@mixin user-select($argument: none) {
    user-select: $argument;
}

@mixin background-clip($argument: padding-box) {
    background-clip: $argument;
}

@mixin placeholder($color) {
    &::-webkit-input-placeholder {
        color: $color;
    }
    &::-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
    &.placeholder {
        color: $color;
    }
}

@mixin hidden {
    display: none!important;
    visibility: hidden;
}

@mixin visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}


/*------------------------- CSS3 MIXINS: GRADIENTS ---------------*/

@mixin gradient($startcolor, $endcolor, $rotation: to bottom) {
    background: $startcolor;
    background: linear-gradient($rotation, $startcolor, $endcolor);
}


/*------------------------- CSS3 MIXINS: BACKGROUNDS ---------------*/

@mixin opacity($opacity: 0.5) {
    opacity: $opacity;
}


/*------------------------- CSS3 MIXINS: BORDERS ---------------*/

@mixin border($color: #EEE) {
    border: solid 1px $color;
}

@mixin rounded($radius: 2px) {
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
    -khtml-border-radius: $radius;
    border-radius: $radius;
}


/*------------------------- CSS3 MIXINS: SHADOWS ---------------*/

@mixin shadow($x-axis: 0, $y-axis: 0, $blur: 4px, $alpha: 0.5) {
    box-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
}

@mixin inner-shadow($x-axis: 1px, $y-axis: 2px, $blur: 3px, $alpha: 0.1) {
    box-shadow: inset $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
}

@mixin no-shadow() {
    box-shadow: none;
}

@mixin textshadow($x-axis: 1px, $y-axis: 1px, $blur: 2px, $alpha: 0.6) {
    text-shadow: $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
}

@mixin no-textshadow() {
    text-shadow: none;
}


/*------------------------- CSS3 MIXINS: TRANSFORM & ANIMATIONS ---------------*/

@mixin transition($duration:0.3s) {
    transition: all $duration ease;
}

@mixin no-transition() {
    transition: none;
}

@mixin transform($arguments) {
    transform: $arguments;
}

@mixin rotate($deg:90deg) {
    @include transform(rotate($deg));
}

@mixin scale($ratio:1.1) {
    @include transform(scale($ratio));
}

@mixin translate($x:0, $y:0) {
    @include transform(translate($x, $y));
}

@mixin translateX($x:0) {
    @include transform(translateX($x));
}

@mixin translateY($x:0) {
    @include transform(translateY($x));
}


/*------------------------- MIXINS: POSITIONING ---------------*/

@mixin absCenter() {
    position: absolute;
    top: 50%;
    left: 50%;
    @include translate(-50%, -50%);
}

@mixin absCenterHor() {
    position: absolute;
    left: 50%;
    @include translateX(-50%);
}

@mixin absCenterVer() {
    position: absolute;
    top: 50%;
    @include translateY(-50%);
}


/*------------------------- MIXINS: IMAGE REPLACEMENT ---------------*/

@mixin ir() {
    text-indent: -9999px;
    text-align: left;
    display: block;
    direction: ltr;
    br {
        display: none;
    }
}

@mixin irInline() {
    text-indent: -9999px;
    text-align: left;
    display: inline-block;
    direction: ltr;
    br {
        display: none;
    }
}


/*------------------------- CLEARFIX ---------------*/

@mixin group() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
    zoom: 1;
}


/*---------------------- UNDERLINE (werkt niet met achtergrondafbeeldingen/gradients) ---------------*/


/* example:
  a {
    @include link-underline(#fff, #333, #0CBF);
  }
*/

@mixin text-underline-crop($background) {
    text-shadow: .03em 0 $background, -.03em 0 $background, 0 .03em $background, 0 -.03em $background, .06em 0 $background, -.06em 0 $background, .09em 0 $background, -.09em 0 $background, .12em 0 $background, -.12em 0 $background, .15em 0 $background, -.15em 0 $background;
}

@mixin text-background($color-bg, $color-text) {
    background-image: linear-gradient($color-text, $color-text);
    background-size: 1px 1px;
    background-repeat: repeat-x;
    background-position: 0% 95%;
}

@mixin text-selection($selection) {
    &::selection {
        @include text-underline-crop($selection);
        background: $selection;
    }
    &::-moz-selection {
        @include text-underline-crop($selection);
        background: $selection;
    }
}

@mixin link-underline($background, $text, $selection) {
    @include text-underline-crop($background);
    @include text-background($background, $text);
    @include text-selection($selection);
    color: $text;
    text-decoration: none;
    *,
    *:after,
    &:after,
    *:before,
    &:before {
        text-shadow: none;
    }
    &:visited {
        color: $text;
    }
}


/*---------------------- String Replace ---------------*/

@function str-replace($string, $search, $replace: "") {
    $index: str-index($string, $search);
    @if $index {
        @return str-slice($string, 1, $index - 1)+$replace+str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
}


/*---------------------- Font Face ---------------*/

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;
    $extmods: ( eot: "?", svg: "#" + str-replace($name, " ", "_"));
    $formats: ( otf: "opentype", ttf: "truetype");
    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }
    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}


/*---------------------- Pixels to Rem ---------------*/

@function rem($pixels,
$context: $font__size--base) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }
    @if (unitless($context)) {
        $context: $context * 1px;
    }
    @return $pixels / $context * 1rem;
}